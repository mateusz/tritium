So I want us to jointly develop a data model for a Deuteros amiga game remake.

I have provided you with context files in the form of a user-written walkthrough @manual1.txt which contains a complete list of various entities.

Extract all possible game entities from these files as a markdown multi-level list. At this point I just need a reliable list added to 01_architecture/01_game_entities.md

---

Ok, now based on 01_game_entities.md, figure out a list of abstract classes of objects. So for example, I want an abstract `base` but don't want specifically `mars_base`. Produce the list into 01_architecture/02_abstract_entities.md.

---

Now, based on the knowledge from manual1.txt, manual2.txt, and manual_orig.txt, work out entity relationships of the abstract entities in 02_top_level_entities.md.

Make sure the entities are connected with has-one, and has-many relationships. 

Print this into 01_architecture/03_entity_relationships.md.

---

Now, based on 01_game_entities.md, take each of the game entities under `System`, and give them a short summary around what it does in the game based on the provided context files.

Produce that into 04_entity_detail.md

---

Now continue with entities under Location. Add it to 04 file.

---

Now continue with entities under Base. Add it to 04 file.

---

Now do the same with Personnel. Add it to 04

---

And now facility.

---

Now, vehicles.

---

And now for ranks

--- 

Ok, now we will do the same for the equipment, but into the 05_entity_detail_equipment.md file.

---

Perfect. Now let's do resources into 06_entity_detail_resources.md. But I want you to only mention game-related things, not real world knowledge. If you can't find anything in the reference, skip.

I've also added a database of resource abundance in different locations as planetdata.csv.

---

Now, try to work out the major stages in the game progression based on the manuals. These should be based on plot events that lead to the game completion. For now, just list the plot stages in the 01_architecture/07_plot.md file.

---

Ok good, but now update the file and insert a stage between 1 and 2, where you build up your first IOS and set up the moon orbital base and fix the resource base.

---

Now also split up stage 6 into initial expansion to a first other star system, and add a stage after that about continuing into other systems.

---

Ok let's try working on the battle mechanics. Try to describe a battle algorithm based off the available information. 

Note the manual is confusing re the specific numbers, so use only the numbers in 05 for numeric values of drone and fleet power.

The battle algorithm should be written in markdown, do not use any code. Add this content to 01_architecture/08_battle.md.

---

Now based on 08_battle.md information, invent the exact algorithm for calculating battle outcome as a python code block. Add this to 08_battle.

Make sure the battles are always against Methanoids. Stronger fleet should win most of the time, but there should be some randomness involved. Skip torpedo damage for now.

---

OK, focusing on the core battle algorithm described in 08_battle.md (without torpedo effects etc), can you please create a simulator.py, which:

- lists several typical input test cases, including edge ones
- runs the simulation on the test cases many times, producing a statistical result
- prints information about the test case and the outcome in terms of who won, and how many drones remained, preferable in a one-line, \t separated format, for easy reading in the CLI.

---

Make sure the printout aligns in the CLI, for easy reading. Also, add starting fleet counts and powers to the output.

---

Now update the battle code to go round by round. I want small progressions with each round, so that I can update the player display. I also want luck to ebb and flow from the player.

---

Add number of rounds to the display (making sure it's formatted in fixed columns).

Also, make sure fleet power is incorporated. I can see fleet power has less impact than drone count currently, to the point of drone power not having any impact. Star drones / warlords should win more.

---

Let's now figure out a full nested list of systems and their locations from the source files. Produce this complete list into 01_architecture/09_systems.md.

---

Now look carefully at @solar_system.csv which is a CSV table showing which planets/moons/asteroids have which resources. Add these resources under the relevant solar system locations in 01_architecture/09_systems.md.

You can find resource enum names in 06_entity_detail_resources.md. Use these names only.

Here is an example of how this should look:

BEFORE
- Mercury

AFTER
- Mercury: Iron, Titanium, Carbon, Copper, Palladium, Silica

Be very careful at transcribing correct resources - we will check your work later.

---

Now verify your work. Make sure 09_systems.md matches solar_system.csv. Think carefully, and check every planet in the solar system making sure solar_system.csv shows an X for each resource listed in 09.

Let's begin by checking inner planets, from Mercury to Asteroid belt.

---

Now check saturn and jupiter

---

Now check uranus, neptune and pluto.

---

Now look carefully at @equipment_costs.csv which is a CSV table showing costs and requirements to produce particular equipment. Add these requirements and costs to 01_architecture/10_equipment.md.

If you cannot find the correct item, you can reference 05_entity_detail_equipment.md, which has equipment descriptions.

Here is an example of how this should look:

BEFORE
- IOSChassis

AFTER
- IOSChassis:
  - RequiredRank: 2
  - RequiredLocation: Orbit only
  - Cost: 100 Iron, 250 Titanium, 175 Aluminium, 50 Carbon, 75 Copper

Be very careful at transcribing correct costs and requirements - we will check your work later.

---

Now verify your work. Make sure 10_equipment.md matches equipment_costs.csv. Think carefully, and check every piece of equipment making sure equipment_costs.csv shows the correct number for each resource listed in 10_equipment.md. If needed, fix 10_equipment.md.

Let's begin by checking from Derrick to SCGChassis.

---

Now check from ShuttleDrive to PulseBlastLaser.

---

Based on all the content I've attached, can you figure out a simple list of ALL views that are available in the game? For example include all facility-specific views (such as training), all ship-specific views (such as IOS cabin), master game control views (such as stocktaker), battle views (for battle), Methanoid threat messages, research messages and anything else you can find!

Put a lot of effort, this will be hard to find. Add things that are only mentioned in passing, I will filter this list later using my knowledge of the game. Try to make a complete list.

Output this as markdown into 01_architecture/11_views.md.

---









Based on all the content I've attached, can you figure out a simple list of ALL interactions one can have with the training base facility? Keep strictly to what's included in the text files, do not make things up. Do not include master game controls that appear in every facility, stick to training only.